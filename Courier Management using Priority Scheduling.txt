import tkinter as tk
from tkinter import ttk
from datetime import datetime, timedelta

# Function to calculate the estimated delivery date based on priority
def calculate_estimated_delivery_date(pickup_date, priority):
    # Convert the pickup date to a datetime object
    pickup_datetime = datetime.strptime(pickup_date, "%d/%m/%Y")
    
    # Define delivery time based on priority
    if priority == "platinum":
        delivery_time = 2  # 2 days for platinum
    elif priority == "gold":
        delivery_time = 4  # 4 days for gold
    elif priority == "silver":
        delivery_time = 8  # 8 days for silver
    else:
        return "Unknown"

    # Calculate the estimated delivery date by adding days
    estimated_delivery_datetime = pickup_datetime + timedelta(days=delivery_time)

    # Convert the estimated delivery date back to the string format
    estimated_delivery_date = estimated_delivery_datetime.strftime("%d/%m/%Y")

    return estimated_delivery_date

# Function to add a package to the list and update the table
def add_package():
    pickup_date = entry_pickup_date.get()
    pickup_time = entry_pickup_time.get()
    priority = combo_priority.get()
    estimated_delivery_date = calculate_estimated_delivery_date(pickup_date, priority)

    package_data = [len(packages) + 1, pickup_date, pickup_time, priority, estimated_delivery_date]
    packages.append(package_data)
    update_table(packages)

# Function to update the table with package details
def update_table(package_list):
    tree.delete(*tree.get_children())
    for package in package_list:
        tree.insert("", "end", values=package)

# Create a GUI window
window = tk.Tk()
window.title("Courier Management System")

# Create and place widgets in the GUI
label_pickup_date = tk.Label(window, text="Pickup Date (day/month/year):")
label_pickup_date.grid(row=0, column=0)
entry_pickup_date = tk.Entry(window)
entry_pickup_date.grid(row=0, column=1)

label_pickup_time = tk.Label(window, text="Pickup Time (hour:minute:second):")
label_pickup_time.grid(row=1, column=0)
entry_pickup_time = tk.Entry(window)
entry_pickup_time.grid(row=1, column=1)

label_priority = tk.Label(window, text="Priority (platinum/gold/silver):")
label_priority.grid(row=2, column=0)
combo_priority = ttk.Combobox(window, values=["platinum", "gold", "silver"])
combo_priority.grid(row=2, column=1)

button_add_package = tk.Button(window, text="Add Package", command=add_package)
button_add_package.grid(row=3, column=0, columnspan=2)

# Create a Treeview widget for the table
tree = ttk.Treeview(window, columns=("ID", "Pickup Date", "Pickup Time", "Priority", "Estimated Delivery Date"))
tree.heading("#1", text="ID")
tree.heading("#2", text="Pickup Date")
tree.heading("#3", text="Pickup Time")
tree.heading("#4", text="Priority")
tree.heading("#5", text="Estimated Delivery Date")
tree.grid(row=4, columnspan=2, padx=10, pady=10)

# Create a list to store package data
packages = []

window.mainloop()